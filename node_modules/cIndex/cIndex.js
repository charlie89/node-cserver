var fs = require("fs");
var croot = require("cPath").getRootDir();
var gzip = require('gzip');
var isCached= false;
var cache_top = '';
var cache_center = '';
var cache_bottom = '';

exports.route = {
   api: '',
   method: 'GET',
   callback: serve
};

function serve (req, res) {
   res.writeHead(200, {
      'Content-Encoding': 'gzip',
      'Content-Type': 'text/html; charset=utf-8'
   });
   if (!isCached) {
      generateCache(req, res);
      return;
   }
   generateSite(req, res);
}

function generateSite(req, res){
   var cache = cache_top;
   require("cPluginLoader").loadPlugins(req.user.cPluginLoader.initPlugins, req.user.cPluginLoader.initConfigs, function(plugins){
      plugins.css.forEach(function(css){
         cache += css;
      });
      cache += cache_center;
      plugins.js.forEach(function(js){
         cache += js;
      });
      cache += cache_bottom;
      gzip(cache, function(err, buffer) {
         if (err) throw err;
         res.end(buffer);
      });
   });
}

function generateCache(req, res) {
   fs.readFile(croot + 'client/top.html', function(err, data) {
      if (err) throw err;
      cache_top += data;
      // load includes.json file
      fs.readFile(croot + 'client/includes.json', function(err, data) {
         if (err) throw err;
         var plugins = JSON.parse(data).plugins;
         require("cPluginLoader").loadPlugins(plugins, null, function(result) {
            result.css.forEach(function(css) {
               cache_top += css;
            });
            fs.readFile(croot + 'client/center.html', function(err, data) {
               if (err) throw err;
               cache_center += data;
               // send all js-Files
               result.js.forEach(function(js) {
                  cache_center += js;
               });
               fs.readFile(croot + 'client/bottom.html', function(err, data) {
                  if (err) throw err;
                  cache_bottom = data;
                  isCached=true;
                  generateSite(req, res);
               });
            });
         });
      });
   });
}
